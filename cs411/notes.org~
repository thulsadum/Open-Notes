* TODO General
  1. Data Models: Notation for describing the structure of the data in
     the DB
  2. Relational Model: Relations are tables representing info. Columns
     are headed by attributes. Rows are called tuples
  3. Keys: A constraint on relations that uniquely identifies tuples
     in a table
     
* TODO ER (5)
* TODO Schema Design (10)
** Functional Dependencies
   If A_j, B_j are attributes of R a FD on R $\equiv A_1A_2...A_n
   \rightarrow B_1B_2...B_m$
** Key Relation
   $A = {A_1,A_2,...A_n}$ is a key iff
   1. If B is a set of all attributes in R then A is a key if
      $A\rightarrow B$
   2. No subset of A, call $A'$, satisfies $A' \rightarrow B$
** Super Key:
   a set B that contains the key A. This means it only satisfies
   condition 1 of the key relation
** Closure
   Set of all attributes impliable based on a givenset of attributes
** TODO Minimal Basis
** Boyce-Codd Normal Form (BCNF)
   A relational schemem $R$, is in BCNF iff $\forall$ dependcies
   $X\rightarrow Y$, at least one of the following is true:
   1. $X\rightarrow Y$ is a trivial FD ($X \subseteq Y$)
   2. $X$ is a superkey for $R$
      1. Eliminates redundancy
      2. May cause loss of FD's
** Lossless-Join Decomposition:
   A useful property of a decomposition is that the original relation
   can be recovered exactly by taking the natural joing of the
   relations in the decomposition
** Dependency-Preserving Decomposition:
   A decomposition that we can check for all the functional
   dependencies that hold in the original relation
** Third Normal Form (3NF):
   A relaxed form of BCNF, called 3NF, allows an FD $X\rightarrow A$
   even if X is not a superkey, provided A is member of some key
   - Preserves functional dependencies
   - May not remove all redundancies
** The Chase:
   Algorithm for testing for a lossless-join
* DONE Relational Algebra (5)
  This algebra underlies most query languages for the relational model.
** Union ($\cup$)
   Same as set theory
** Intersection ($\cap$)
   Same as set theory
** Difference ($-$)
   Same as set theory
** Selection ($\sigma$)
   1. Syntax: $\sigma_C(R)$, where $C=$ boolean condition on attributes.
   2. Returns: Relation where all attributes satisfy C
** Projection ($\pi$)
   1. Syntax: $\pi_A(R)$, where $A=$ list of attributes
   2. Returns: Relation with only columns corresponding with A
** Caresian product ($\times$)
   Same as set theory
** Theta-Join ($\bowtie_\theta$)
   1. Syntax: $R_1 \bowtie_\theta R_2$, where $\theta$ is an boolean attribute condition
   2. Return: Relation with all joint tuples that satisfy $\theta$
*** Natural Join ($\bowtie$)
    1. $C$ = All common attributes columns are equal
** Renaming ($\rho$)
* TODO SQL (10)
  The language SQL is the principal query language for relational
  database systems.
* TODO SQL Constraints (5)
* TODO Indexing (dense, sparse, clustered) (5)
* TODO B+ Trees (5)
* TODO Extensible hash tables (5)
* TODO KD-Trees (5)
* TODO Query Processing (10)
* TODO SQL+indexing+query processing (5)
